plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	//id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}

group = 'com.kafka.service.producer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
//
//ext {
//	set('snippetsDir', file("build/generated-snippets"))
//}
tasks.named('jar'){
		manifest{
			attributes( 'Implementation-Title':project.name,
			'Implementation-Version':project.version,
			'Main-Class': 'com.kafka.service.producer.KafkaServiceAProducerApplication')
		}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.kafka:kafka-clients:3.0.0'
	implementation 'com.opencsv:opencsv:5.5.2'
	implementation 'com.google.code.gson:gson:2.8.9'
	implementation 'org.springframework.kafka:spring-kafka:2.7.6'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
	//outputs.dir snippetsDir
	Map<String,String> envprop= new HashMap<>()
	envprop.put("kafka","kafka");envprop.put("port","9092")
	environment(envprop)
	useJUnitPlatform()
}

//asciidoctor {
//	inputs.dir snippetsDir
//	dependsOn test
//}
